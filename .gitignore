import React, { useState, useEffect } from 'react';
import {
  Home, LogOut, User, FileText, Calendar,
  LayoutDashboard, Shield, Settings, Users2Icon
} from 'lucide-react';
import './Layout.css';
import { Link, useLocation, useNavigate, Outlet } from 'react-router-dom';
import { useAuth } from '../../hooks/AuthContext';

const DashboardLayout: React.FC = () => {
  const [isSidebarExpanded, setIsSidebarExpanded] = useState(true);
  const [isMobile, setIsMobile] = useState(false);
  const [isMobileSidebarOpen, setIsMobileSidebarOpen] = useState(false);
  const [activeTab, setActiveTab] = useState('Home');
  const { logout, user } = useAuth();

  const navigate = useNavigate();
  const location = useLocation();

  useEffect(() => {
    const checkIsMobile = () => {
      const mobile = window.innerWidth <= 768;
      setIsMobile(mobile);

      if (mobile) {
        setIsSidebarExpanded(false);
      } else {
        setIsSidebarExpanded(true);
        setIsMobileSidebarOpen(false);
      }
    };

    checkIsMobile();
    window.addEventListener('resize', checkIsMobile);
    return () => window.removeEventListener('resize', checkIsMobile);
  }, []);

  const handleTabClick = (tabName: string, path?: string, isAction?: boolean) => {
    setActiveTab(tabName);
    if (isAction) {
      logout();
      navigate('/login');
      return;
    }
    if (path) navigate(path);
    if (isMobile) setIsMobileSidebarOpen(false);
  };

  const sidebarConfig: Record<string, { id: string; name: string; icon: React.ElementType; path?: string; isAction?: boolean }[]> = {
    ADMIN: [
      { id: 'agents', name: 'Agents', icon: User, path: '/dashboard/admin/agents' },
      { id: 'customers', name: 'Customers', icon: Users2Icon, path: '/dashboard/admin/customer' },
      { id: 'policies', name: 'Policies', icon: Shield, path: '/dashboard/admin/policy/list' },
      { id: 'claims', name: 'Claims', icon: FileText, path: '/dashboard/admin/claims' },
      { id: 'notifications', name: 'Notifications', icon: Calendar, path: '/dashboard/notifications' },
    ],
    AGENT: [
      { id: 'dashboard', name: 'Profile', icon: Home, path: '/dashboard/profile' },
      { id: 'customers', name: 'My Customers', icon: Users2Icon, path: '/dashboard/agent/customers' },
      { id: 'enroll', name: 'Enroll Policy', icon: Settings, path: '/dashboard/agent/plans' },
      // { id: 'notifications', name: 'Notifications', icon: Calendar, path: '/dashboard/notifications' },
    ],
    CUSTOMER: [
      { id: 'dashboard', name: 'Dashboard', icon: Home, path: '/dashboard/profile' },
      { id: 'enroll', name: 'Enroll Policy', icon: FileText, path: '/dashboard/plans' },
      // { id: 'policies', name: 'My Policies', icon: Shield, path: '/dashboard/customer/policies' },
      { id: 'file-claim', name: 'File Claim', icon: FileText, path: '/dashboard/customer/fileClaim' },
      { id: 'notifications', name: 'Notifications', icon: Calendar, path: '/dashboard/notifications' },
    ],
  };

  const sidebarTabs = sidebarConfig[user?.role || 'CUSTOMER'];

  return (
    <div className="dashboard-container">
      <aside
        className={`dashboard-sidebar ${isSidebarExpanded ? 'expanded' : 'collapsed'} ${
          isMobileSidebarOpen ? 'mobile-open' : ''
        }`}
      >
        <div className="sidebar-header-bg">
          <div className="sidebar-logo">
            <Link to="/" className="sidebar-logo-link">
              <div className="logo-icon">
                <LayoutDashboard />
              </div>
              {isSidebarExpanded && <span className="logo-text">Insurance Management System</span>}
            </Link>
          </div>
        </div>

        <nav className="sidebar-nav">
          <ul className="nav-list">
            {sidebarTabs.map((tab) => {
              const IconComponent = tab.icon;
              const isActive = location.pathname === tab.path || activeTab === tab.id;

              return (
                <li key={tab.id} className="nav-item">
                  <button
                    className={`nav-link ${isActive ? 'active' : ''} ${tab.isAction ? 'action-btn' : ''}`}
                    onClick={() => handleTabClick(tab.id, tab.path, tab.isAction)}
                  >
                    <IconComponent size={20} />
                    {isSidebarExpanded && <span className="nav-text">{tab.name}</span>}
                  </button>
                </li>
              );
            })}
          </ul>
          

        </nav>
        <button className="logout-btn" onClick={() => {
    logout();
    navigate('/login');
  }}>
            Logout
          </button>
      </aside>


      {isMobile && isMobileSidebarOpen && (
        <div className="sidebar-overlay" onClick={() => setIsMobileSidebarOpen(false)}></div>
      )}

      <main className="dashboard-main">
        <div className="main-content">
          {/* <div className="welcome-section">
            <h2>
              {user?.role === 'ADMIN' ? `Welcome, ${user?.fullName}` :
               user?.role === 'AGENT' ? `Welcome, Agent ${user?.fullName}` :
               `Welcome, ${user?.fullName}`}
            </h2>
            <div className="dashboard-tabs">
              {user?.role === 'CUSTOMER' && (
                <>
                  <button
                    className={`dashboard-tab ${location.pathname.includes('profile') ? 'active' : ''}`}
                    onClick={() => navigate('/dashboard/profile')}
                  >
                    My Profile
                  </button>
                  <button
                    className={`dashboard-tab ${location.pathname.includes('policies') ? 'active' : ''}`}
                    onClick={() => navigate('/dashboard/customer/policies')}
                  >
                    My Policies
                  </button>
                  <button
                    className={`dashboard-tab ${location.pathname.includes('claims') ? 'active' : ''}`}
                    onClick={() => navigate('/dashboard/customer/claims')}
                  >
                    My Claims
                  </button>
                </>
              )}
            </div>

            
          </div> */}
          <Outlet />
        </div>
      </main>
    </div>
  );
};

export default DashboardLayout;






/* Layout.css */
:root {
  --primary-color: #2563eb;
  --primary-dark: #1d4ed8;
  --secondary-color: #64748b;
  --accent-color: #f1f5f9;
  --border-color: #e2e8f0;
  --text-color: #1e293b;
  --text-light: #64748b;
  --white: #ffffff;
  --gray-light: #f8fafc;
  --gray-dark: #475569;
  --alert-color: #dc2626;
  --success-color: #16a34a;
  --warning-color: #d97706;
  --sidebar-bg-dark: #1d2e4b;
  
  --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1);
  --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1);
  
  --border-radius: 8px;
  --border-radius-lg: 12px;
}

.dashboard-tabs {
  display: flex;
  gap: 1rem;
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.dashboard-tab {
  padding: 0.5rem 1rem;
  background-color: #007cf7;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-weight: 500;
  transition: background-color 0.3s ease;
}

/* .dashboard-tab:hover {
  background-color: #dbeafe;
  color: #1e293b;
}

.dashboard-tab.active {
  background-color: #2563eb;
  color: white;
}



/* Dashboard Layout Styles */
.dashboard-container {
  display: flex;
  min-height: 100vh;
  position: relative;
  background-color: var(--gray-light);
}

/* Header Styles */
.dashboard-header {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  height: 70px;
  background-color: var(--white);
  border-bottom: 1px solid var(--border-color);
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 2rem;
  z-index: 1000;
  box-shadow: var(--shadow-sm);
}

.header-left {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.menu-toggle {
  background: none;
  border: none;
  cursor: pointer;
  color: var(--text-color);
  padding: 0.5rem;
  border-radius: var(--border-radius);
  transition: background-color 0.2s;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* .menu-toggle:hover {
  background-color: var(--accent-color);
} */

.header-title {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--primary-color);
}

.header-right {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.user-profile {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 0.5rem 1rem;
  background-color: var(--accent-color);
  border-radius: var(--border-radius-lg);
}

.user-name {
  font-weight: 600;
  color: var(--text-color);
  font-size: 0.95rem;
}

.user-role-badge {
  background: var(--primary-color);
  color: var(--white);
  padding: 0.25rem 0.75rem;
  border-radius: 20px;
  font-size: 0.8rem;
  font-weight: 600;
}

/* Sidebar Styles */
.dashboard-sidebar {
  position: fixed;
  /* top: 70px; */
  left: 0;
  /* height: calc(100vh - 70px); */
  height: 100%;
  background-color: var(--sidebar-bg-dark);
  border-right: 1px solid var(--border-color);
  display: flex;
  flex-direction: column;
  transition: transform 0.3s ease, width 0.3s ease;
  z-index: 999;
  overflow-y: auto;
  width: 280px;
}

.dashboard-sidebar.collapsed {
  width: 80px;
}

.dashboard-sidebar.mobile-open {
  transform: translateX(0);
}

/* Sidebar scrollbar styling */
.dashboard-sidebar::-webkit-scrollbar {
  width: 4px;
}

.dashboard-sidebar::-webkit-scrollbar-track {
  background: transparent;
}

.dashboard-sidebar::-webkit-scrollbar-thumb {
  background: rgba(255, 255, 255, 0.2);
  border-radius: 2px;
}

/* .dashboard-sidebar::-webkit-scrollbar-thumb:hover {
  background: rgba(244, 1, 1, 0.3);
} */

.sidebar-header-bg {
  padding: 1rem;
  background-color: var(--sidebar-bg-dark);
}

.sidebar-logo {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.logo-icon {
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
  border-radius: var(--border-radius);
  color: white;
  flex-shrink: 0;
}

.sidebar-logo-link {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  color: var(--white);
  text-decoration: none;
}

span.logo-text {
  font-weight: 600;
  font-size: 1.5rem;
  margin-top: 15px;
  color: var(--white);
}

.sidebar-nav {
  flex: 1;
  padding: 1rem 0;
}

.nav-list {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  padding: 0 1rem;
}

.nav-item {
  width: 100%;
}

.nav-link {
  display: flex;
  align-items: center;
  gap: 1rem;
  width: 100%;
  padding: 1rem;
  background: none;
  border: none;
  cursor: pointer;
  color: rgba(255, 255, 255, 0.8);
  transition: all 0.3s ease;
  text-align: left;
  font-size: 0.95rem;
  font-weight: 500;
  border-radius: var(--border-radius);
  position: relative;
  overflow: hidden;
}

.nav-link::before {
  content: '';
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 4px;
  height: 0;
  background: var(--primary-color);
  border-radius: 0 4px 4px 0;
  transition: height 0.3s ease;
}

.nav-link:hover {
  background-color: rgba(255, 255, 255, 0.1);
  color: var(--white);
  padding-left: 1.25rem;
} */

.nav-link:hover::before {
  height: 60%;
  color: #1e293b;
}

.nav-link.active {
  background-color: rgba(255, 255, 255, 0.15);
  color: var(--white);
}

.nav-link.active::before {
  height: 80%;
  background: var(--primary-color);
}

.nav-text {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-weight: 700;
  font-size: 17px;
}

.nav-link.action-btn {
  color: #fca5a5;
  margin-top: auto;
}

.nav-link.action-btn:hover {
  background-color: rgb(220, 38, 38);
  color: #fecaca;
  
}

/* Main Content Styles */
.dashboard-main {
  flex: 1;
  margin-top: 15px;
  /* margin-left: 280px; */
  background: linear-gradient(135deg, var(--gray-light) 0%, var(--accent-color) 100%);
  padding: 2rem;
  overflow-y: auto;
  min-height: calc(100vh - 70px);
  transition: margin-left 0.3s ease;
}

/* Adjust main content when sidebar is collapsed */
.dashboard-sidebar.collapsed ~ .dashboard-main {
  margin-left: 80px;
}

.main-content {
  width: 100%;

}

.welcome-section {
  background: var(--white);
  padding: 2rem;
  border-radius: var(--border-radius-lg);
  margin-bottom: 2rem;
  margin-left: 30px;
  margin-right: 30px;
  box-shadow: var(--shadow-sm);
  border: 1px solid var(--border-color);
}

.welcome-section h2 {
  font-size: 1.75rem;
  font-weight: 700;
  color: var(--text-color);
  margin-bottom: 0.5rem;
}

.welcome-section p {
  color: var(--text-light);
  font-size: 1.1rem;
}

/* Overlay for mobile */
.sidebar-overlay {
  position: fixed;
  top: 70px;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(29, 30, 43, 0.5);
  z-index: 998;
  display: none;
}

/* Responsive Styles */
@media (max-width: 768px) {
  .dashboard-header {
    padding: 0 1rem;
    height: 60px;
  }

  .header-title {
    font-size: 1.25rem;
  }

  .user-name {
    display: none;
  }

  .dashboard-sidebar {
    top: 60px;
    height: calc(100vh - 60px);
    transform: translateX(-100%);
    width: 280px;
  }

  .dashboard-sidebar.mobile-open {
    transform: translateX(0);
  }

  .dashboard-main {
    margin-left: 0 !important;
    margin-top: 60px;
    padding: 1rem;
  }

  .sidebar-overlay {
    display: block;
    top: 60px;
  }

  .welcome-section {
    padding: 1.5rem;
  }

  .welcome-section h2 {
    font-size: 1.5rem;
  }
}

@media (max-width: 480px) {
  .dashboard-main {
    padding: 0.75rem;
  }

  .welcome-section {
    padding: 1rem;
    margin-bottom: 1rem;
  }

  .welcome-section h2 {
    font-size: 1.25rem;
  }

  .sidebar-header-bg {
    padding: 1rem;
  }

  .nav-link {
    padding: 0.875rem;
  }
}

/* Custom scrollbar for main content */
.dashboard-main::-webkit-scrollbar {
  width: 8px;
}

.dashboard-main::-webkit-scrollbar-track {
  background: var(--accent-color);
}

.dashboard-main::-webkit-scrollbar-thumb {
  background: var(--alert-color);
  border-radius: 4px;
}

.dashboard-main::-webkit-scrollbar-thumb:hover {
  background: var(--primary-dark);
}

/* Animation for sidebar */
.dashboard-sidebar {
  animation: slideInLeft 0.3s ease;
}

@keyframes slideInLeft {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

/* Ensure all interactive elements are visible */
.dashboard-container button,
.dashboard-container a {
  visibility: visible !important;
  opacity: 1 !important;
}

.logout-btn {
  width: 80%;
  margin: 0 auto;
  margin-bottom: 20px;
  padding: 12px;
  background: rgba(229, 62, 62, 0.8);
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  font-size: 14px;
  font-weight: 600;
}
 
.logout-btn:hover {
  background: rgba(229, 62, 62, 1);
}
 
